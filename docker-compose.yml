version: '3.9'

services:
  # References
  # https://opentelemetry.io/docs/collector/configuration/
  # https://grafana.com/blog/2022/05/10/how-to-collect-prometheus-metrics-with-the-opentelemetry-collector-and-grafana/
  otel-collector:
    image: otel/opentelemetry-collector:0.74.0
    command: [--config=/etc/otel-collector-config.yaml]
    volumes:
      - ./config/opentelemetry/collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
  prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus:/etc/prometheus
    depends_on:
      otel-collector:
        condition: service_started
  # References:
  # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/
  # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
  # https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources
  # https://grafana.com/docs/grafana/latest/datasources/prometheus/
  prometheus-pushgateway:
    image: prom/pushgateway:v1.5.1
    ports:
      - 9091:9091
    depends_on:
      prometheus:
        condition: service_started
  grafana:
    image: grafana/grafana:8.5.22
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/provisioning/datasources/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    depends_on:
      prometheus:
        condition: service_started